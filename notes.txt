Some git hub practices,
Peter Steidten, starting 2020-02-07

Setting up git:
http://blog.davidecoppola.com/2016/12/how-to-set-up-a-git-repository-locally-and-on-a-remote-server/

Some tricks with git:
https://www.git-tower.com/blog/surviving-with-git-videos/



# got to new folder, which you want to become a git repo
mkdir Otto
cd Otto

# init git
git init

#### on github: 
#create a repo, eg: https://github.com/lifeof3point1416/Otto

# back in local dir:
git remote add origin https://github.com/lifeof3point1416/Otto
git remote -v
git pull origin master
<add files>
git push origin master

#### now all local files should be in online repo


######## lessons

1. Discarding All Local Changes in a File

$ git checkout <commit> <filename>
# for example if I want to discard the last commit of fuel_consumption.py:
$ git checkout HEAD fuel_consumption.py

####

2. Restoring a Deleted File

$ git status

On branch master
Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

	deleted:    hello.py
	modified:   notes.txt

no changes added to commit (use "git add" and/or "git commit -a")

# restore hello.py (last comit state of that file)

$ git checkout HEAD hello.py

####

3. Discarding Chunks / Lines in a File

# some changes are good in fuel_consumption.py, but some aren't

$ git checkout -p fuel_consumption.py

# go through changes line by line interactively, decide with y/n, wether 
the change should be *discarded*

# if a hunk is too big, use 's' to split it, until you reach the desired granularity
